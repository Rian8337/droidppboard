head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(name='description' content='Calculate a beatmap with respect to Elaina PP Project.')
    title PP Board - Calculate Beatmap PP
    link(rel='stylesheet' href='../styles/main.css')
    link(rel='stylesheet' href='../styles/table-calculation-result.css')
    link(rel='stylesheet' href='../styles/calculate.css')
    link(rel='icon' href='../icons/icon.png' type='image/x-icon')

body
    .top-banner
        h1 Elaina PP Project
        p A basic PP project for osu!droid.
    hr

    .main-menu
        a(href='/') Home
        a(href='/leaderboard') Leaderboard
        a(href='/whitelist') Whitelist
        a(href='/top-plays') Top Plays
        a.menu-active(href='/calculate') Calculate Beatmap PP
        a(href='/prototype/leaderboard') Prototype Leaderboard
        a(href='/prototype/top-plays') Prototype Top Plays
        a(href='/prototype/calculate') Calculate Beatmap Prototype PP
    hr

    h2.subtitle Calculate Beatmap PP

    if err
        h3 Error: #{err}.

    if mapdata
        h4 Calculation Result
        table.calculation-result
            caption Beatmap Statistics
            if beatmapId
                tr
                    th Beatmap ID
                    td
                        a(href='https://osu.ppy.sh/b/' + beatmapId)= beatmapId + ' (click/tap to visit osu! site)'
            tr
                th Artist
                td= mapdata.artist
            tr
                th Title
                td= mapdata.title
            tr
                th Creator/Mapper
                td= mapdata.creator
            tr
                th Difficulty Name
                td= mapdata.version
            tr
                th Base Statistics
                td CS: #{mapdata.cs} AR: #{mapdata.ar} OD: #{mapdata.od} HP: #{mapdata.hp}
        br
        table.calculation-result
            caption Calculation Statistics
            tr
                th Mods
                td
                    each mod in calcdata.mods
                        img(src='../icons/mods/' + mod.acronym + '.png', title=mod.name alt=mod.acronym)
                    else
                        img(src='../icons/mods/NM.png', title="NoMod" alt="NM")
            tr
                th Accuracy
                td #{calcdata.accuracy.toFixed(2)}%
            tr
                th Combo
                td #{Math.min(calcdata.combo, mapdata.maxCombo)}/#{mapdata.maxCombo}
            tr
                th Misses
                td= Math.max(0, Math.min(calcdata.misses, mapdata.objects.length))
            tr
                th Speed Multiplier
                td= calcdata.speedmultiplier
            tr
                th Force AR
                td #{calcdata.forcear ? 'AR ' + calcdata.forcear : 'None'}
            tr
                th Estimated
                td= calcdata.estimated ? 'Yes' : 'No'
        br
        table.calculation-result
            caption Difficulty Statistics
            tr
                th(style='width: 10%;') Type
                th(style='width: 22.5%;') Aim
                th(style='width: 22.5%;') Speed/Tap
                th(style='width: 22.5%;') Flashlight
                th(style='width: 22.5%;') Total
            tr.calc-data
                th Droid
                td= calcdata.star.droidStars.aim.toFixed(2)
                td= calcdata.star.droidStars.tap.toFixed(2)
                td= calcdata.star.droidStars.flashlight.toFixed(2)
                td= calcdata.star.droidStars.total.toFixed(2)
            tr.calc-data
                th PC
                td= calcdata.star.pcStars.aim.toFixed(2)
                td= calcdata.star.pcStars.speed.toFixed(2)
                td= calcdata.star.pcStars.flashlight.toFixed(2)
                td= calcdata.star.pcStars.total.toFixed(2)
        br
        table.calculation-result
            caption Performance Statistics
            tr
                th(style='width: 10%;') Type
                th(style='width: 18%;') Aim
                th(style='width: 18%;') Speed/Tap
                th(style='width: 18%;') Accuracy
                th(style='width: 18%;') Flashlight
                th(style='width: 18%;') Total
            tr.calc-data
                th Droid
                td= calcdata.pp.droid.aim.toFixed(2)
                td= calcdata.pp.droid.tap.toFixed(2)
                td= calcdata.pp.droid.accuracy.toFixed(2)
                td= calcdata.pp.droid.flashlight.toFixed(2)
                td= calcdata.pp.droid.total.toFixed(2)
            tr.calc-data
                th PC
                td= calcdata.pp.osu.aim.toFixed(2)
                td= calcdata.pp.osu.speed.toFixed(2)
                td= calcdata.pp.osu.accuracy.toFixed(2)
                td= calcdata.pp.osu.flashlight.toFixed(2)
                td= calcdata.pp.osu.total.toFixed(2)
        if calcdata.straingraph.droid && calcdata.straingraph.osu
            figure
                figcaption Droid Strain Graph
                img(src='data:image/png;base64,' + calcdata.straingraph.droid)
            figure
                figcaption PC Strain Graph
                img(src='data:image/png;base64,' + calcdata.straingraph.osu)
        hr

    h4 Calculation Form
    form.calculate-form(method='post')
        label(for='beatmapfile')
            p Beatmap File
            | Use this if you want to calculate a .osu file. Useful if the beatmap is not available in osu! beatmap listing.
            br
            | Either this or beatmap link/ID must be provided.
            br
            | If both options are provided, this option is prioritized.
        br
        input.parameter(type='file' accept='.osu' name='beatmapfile')
        label(for='beatmaplink')
            p Beatmap link or ID
            | Use this if you want to directly retrieve a beatmap from osu! beatmap listing.
            br
            | Either this or beatmap file must be provided.
        br
        input.parameter(type='text' name='beatmaplink' placeholder='Insert beatmap link or ID...' value=formdata ? formdata.beatmaplink : '')
        br
        label(for='mods')
            p Mods
            | Optional. Defaults to none.
        br
        input.parameter(type='text' name='mods' placeholder='Insert mods...' value=formdata ? formdata.mods : '')
        label(for='accuracy')
            p Accuracy
            | Optional, range from 1-100.
            br
            | Defaults to 100.
        br
        input.parameter(type='text' name='accuracy' placeholder='Insert accuracy...' value=formdata ? formdata.accuracy : '')
        br
        label(for='combo')
            p Combo
            | Optional, range from 1 to the beatmap's maximum combo.
            br
            | Defaults to the beatmap's maximum combo.
        br
        input.parameter(type='text' name='combo' placeholder='Insert combo...' value=formdata ? formdata.combo : '')
        label(for='misses')
            p Misses
            | Optional, defaults to 0.
        br
        input.parameter(type='text' name='misses' placeholder='Insert amount of misses...' value=formdata ? formdata.misses : '')
        br
        label(for='speedmultiplier')
            p Speed Multiplier
            | Optional, range from 0.5 to 2. Defaults to 1.
        br
        input.parameter(type='text' name='speedmultiplier' placeholder='Insert speed multiplier...' value=formdata ? formdata.speedmultiplier : '')
        label(for='force-ar')
            p Force AR
            | Optional, range from 0 to 12.5. Defaults to none.
            br
            | If specified, sets the beatmap's AR to the specified value ignoring any effect from mods.
        br
        input.parameter(type='text' name='forcear' placeholder='Insert force AR...' value=formdata ? formdata.forcear : '')
        br
        input.submit(type='submit' value='Calculate')
hr
footer
    p osu!droid Elaina PP Project Site
    p &copy; 2021 Rian8337
    a(href='https://discord.gg/nyD92cE')
        img(src='https://discord.com/api/guilds/316545691545501706/widget.png?style=shield')
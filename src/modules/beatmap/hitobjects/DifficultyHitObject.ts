import { HitObject } from './HitObject';

/**
 * Represents an osu!standard hit object with difficulty calculation values.
 */
export class DifficultyHitObject {
    /**
     * The underlying hitobject.
     */
    readonly object: HitObject;

    /**
     * The aim strain generated by the hitobject.
     */
    public aimStrain: number = 0;

    /**
     * The speed strain generated by the hitobject.
     */
    public speedStrain: number = 0;

    /**
     * The tap strain generated by the hitobject.
     */
    public tapStrain: number = 0;

    /**
     * The finger control strain generated by the hitobject.
     */
    public fingerControlStrain: number = 0;

    /**
     * The travel distance of the hitobject.
     */
    public travelDistance: number = 0;

    /**
     * The jump distance of the hitobject.
     */
    public jumpDistance: number = 0;

    /**
     * The angle created by the hitobject and the previous 2 hitobjects (if present).
     */
    public angle: number|null = 0;

    /**
     *  Whether or not the hitobject is considered as singletap.
     */
    public isSingle: boolean = false;

    /**
     * The time difference between the hitobject and the previous hitobject (if present).
     */
    public deltaTime: number = 0;

    /**
     * The strain time of the hitobject.
     */
    public strainTime: number = 0;

    /**
     * The radius of the hitobject.
     */
    public radius: number = 0;

    /**
     * The density of this object.
     */
    public noteDensity: number = 0;

    constructor(object: HitObject) {
        this.object = object;
    }

    toString(): string {
        return `Strains: [${this.speedStrain.toFixed(2)}, ${this.aimStrain.toFixed(2)}], is_single: ${this.isSingle}`;
    }
}